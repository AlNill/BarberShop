@using System.Security.Claims
@model IEnumerable<ReviewModel>
@{
    ViewData["Title"] = "Reviews";
}


<div class="d-flex flex-column" style="width: 90%; height: 80%;">
    <div class="d-flex flex-row-reverse">
        <div class="p-2">
            @if (User.Identity.IsAuthenticated)
            {
                <button type="button" class="btn btn-success"
                        onclick="location.href = '@Url.Action("Add", "Reviews")'">Add review</button>
            }
        </div>
    </div>

    <div class="d-flex flex-column">
        @foreach (var review in Model.OrderBy(s => s.User.NickName))
        {
        <div class="card" style="width: 80%; height: 14rem; margin: 2rem;">
            <div class="card-body">
                <h5 class="card-title">@review.User.NickName left review to @review.Barber.Name @review.Barber.Surname</h5>
                <p class="card-text">@review.UserReview</p>
                <div class="d-flex flex-row">
                    @if (User.IsInRole("Admin") || review.User.NickName == User.FindFirstValue(ClaimsIdentity.DefaultNameClaimType))
                    {
                        <button type="button" class="btn btn-success" 
                                style="width: 8rem; height: 2.5rem; margin-right: 5px;"
                                onclick="location.href = '@Url.Action("Edit", "Reviews", review)'">
                            Edit
                        </button>
                        <a class="btn btn-danger" asp-route-id="@review.Id" asp-action="Remove"
                           style="width: 8rem; height: 2.5rem;">
                            Remove
                        </a>
                    }
                </div>
            </div>
        </div>
        }
    </div>
</div>
