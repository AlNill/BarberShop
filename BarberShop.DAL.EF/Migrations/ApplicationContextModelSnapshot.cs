// <auto-generated />
using System;
using BarberShop.DAL.EF.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BarberShop.DAL.EF.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BarberShop.DAL.Common.Models.Barber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Information")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Barbers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FatherName = "Ivanovich",
                            ImagePath = "/images/standart_short.jpg",
                            Information = "Cool information about barber Ivanov must be here.",
                            Name = "Ivan",
                            Surname = "Ivanov"
                        },
                        new
                        {
                            Id = 2,
                            FatherName = "Petrovich",
                            ImagePath = "/images/standart_short.jpg",
                            Information = "Cool information about barber Petrov must be here.",
                            Name = "Petr",
                            Surname = "Petrov"
                        },
                        new
                        {
                            Id = 3,
                            FatherName = "Pupkinovich",
                            ImagePath = "/images/standart_short.jpg",
                            Information = "Cool information about barber Pupkin must be here.",
                            Name = "Pup",
                            Surname = "Pupkin"
                        });
                });

            modelBuilder.Entity("BarberShop.DAL.Common.Models.BusyRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BarberId")
                        .HasColumnType("int");

                    b.Property<int?>("OfferId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RecordTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BarberId");

                    b.HasIndex("OfferId");

                    b.ToTable("BusyRecords");
                });

            modelBuilder.Entity("BarberShop.DAL.Common.Models.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("BarberShop.DAL.Common.Models.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Offers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cost = 35,
                            Duration = 45,
                            Title = "Mans haircut"
                        },
                        new
                        {
                            Id = 2,
                            Cost = 30,
                            Duration = 45,
                            Title = "Child haircut"
                        },
                        new
                        {
                            Id = 3,
                            Cost = 30,
                            Duration = 45,
                            Title = "Bread trim"
                        });
                });

            modelBuilder.Entity("BarberShop.DAL.Common.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BarberId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserReview")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BarberId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("BarberShop.DAL.Common.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("BarberShop.DAL.Common.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NickName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "us3rt35t@yandex.ru",
                            FatherName = "Admin",
                            Name = "Admin",
                            NickName = "Admin",
                            Password = "Admin",
                            RoleId = 1,
                            Surname = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Email = "us3rt35t@yandex.ru",
                            FatherName = "FatherName1",
                            Name = "Name1",
                            NickName = "User1",
                            Password = "User1",
                            RoleId = 2,
                            Surname = "Surname1"
                        },
                        new
                        {
                            Id = 3,
                            Email = "us3rt35t@yandex.ru",
                            FatherName = "FatherName2",
                            Name = "Name2",
                            NickName = "User2",
                            Password = "User2",
                            RoleId = 2,
                            Surname = "Surname2"
                        },
                        new
                        {
                            Id = 4,
                            Email = "us3rt35t@yandex.ru",
                            FatherName = "FatherName3",
                            Name = "Name3",
                            NickName = "User3",
                            Password = "User3",
                            RoleId = 2,
                            Surname = "Surname3"
                        },
                        new
                        {
                            Id = 5,
                            Email = "us3rt35t@yandex.ru",
                            FatherName = "FatherName4",
                            Name = "Name4",
                            NickName = "User4",
                            Password = "User4",
                            RoleId = 2,
                            Surname = "Surname4"
                        },
                        new
                        {
                            Id = 6,
                            Email = "us3rt35t@yandex.ru",
                            FatherName = "FatherName5",
                            Name = "Name5",
                            NickName = "User5",
                            Password = "User5",
                            RoleId = 2,
                            Surname = "Surname5"
                        },
                        new
                        {
                            Id = 7,
                            Email = "us3rt35t@yandex.ru",
                            FatherName = "FatherName6",
                            Name = "Name6",
                            NickName = "User6",
                            Password = "User6",
                            RoleId = 2,
                            Surname = "Surname6"
                        },
                        new
                        {
                            Id = 8,
                            Email = "us3rt35t@yandex.ru",
                            FatherName = "FatherName7",
                            Name = "Name7",
                            NickName = "User7",
                            Password = "User7",
                            RoleId = 2,
                            Surname = "Surname7"
                        },
                        new
                        {
                            Id = 9,
                            Email = "us3rt35t@yandex.ru",
                            FatherName = "FatherName8",
                            Name = "Name8",
                            NickName = "User8",
                            Password = "User8",
                            RoleId = 2,
                            Surname = "Surname8"
                        },
                        new
                        {
                            Id = 10,
                            Email = "us3rt35t@yandex.ru",
                            FatherName = "FatherName9",
                            Name = "Name9",
                            NickName = "User9",
                            Password = "User9",
                            RoleId = 2,
                            Surname = "Surname9"
                        },
                        new
                        {
                            Id = 11,
                            Email = "us3rt35t@yandex.ru",
                            FatherName = "FatherName10",
                            Name = "Name10",
                            NickName = "User10",
                            Password = "User10",
                            RoleId = 2,
                            Surname = "Surname10"
                        },
                        new
                        {
                            Id = 12,
                            Email = "us3rt35t@yandex.ru",
                            FatherName = "FatherName11",
                            Name = "Name11",
                            NickName = "User11",
                            Password = "User11",
                            RoleId = 2,
                            Surname = "Surname11"
                        },
                        new
                        {
                            Id = 13,
                            Email = "us3rt35t@yandex.ru",
                            FatherName = "FatherName12",
                            Name = "Name12",
                            NickName = "User12",
                            Password = "User12",
                            RoleId = 2,
                            Surname = "Surname12"
                        },
                        new
                        {
                            Id = 14,
                            Email = "us3rt35t@yandex.ru",
                            FatherName = "FatherName13",
                            Name = "Name13",
                            NickName = "User13",
                            Password = "User13",
                            RoleId = 2,
                            Surname = "Surname13"
                        },
                        new
                        {
                            Id = 15,
                            Email = "us3rt35t@yandex.ru",
                            FatherName = "FatherName14",
                            Name = "Name14",
                            NickName = "User14",
                            Password = "User14",
                            RoleId = 2,
                            Surname = "Surname14"
                        },
                        new
                        {
                            Id = 16,
                            Email = "us3rt35t@yandex.ru",
                            FatherName = "FatherName15",
                            Name = "Name15",
                            NickName = "User15",
                            Password = "User15",
                            RoleId = 2,
                            Surname = "Surname15"
                        },
                        new
                        {
                            Id = 17,
                            Email = "us3rt35t@yandex.ru",
                            FatherName = "FatherName16",
                            Name = "Name16",
                            NickName = "User16",
                            Password = "User16",
                            RoleId = 2,
                            Surname = "Surname16"
                        },
                        new
                        {
                            Id = 18,
                            Email = "us3rt35t@yandex.ru",
                            FatherName = "FatherName17",
                            Name = "Name17",
                            NickName = "User17",
                            Password = "User17",
                            RoleId = 2,
                            Surname = "Surname17"
                        },
                        new
                        {
                            Id = 19,
                            Email = "us3rt35t@yandex.ru",
                            FatherName = "FatherName18",
                            Name = "Name18",
                            NickName = "User18",
                            Password = "User18",
                            RoleId = 2,
                            Surname = "Surname18"
                        },
                        new
                        {
                            Id = 20,
                            Email = "us3rt35t@yandex.ru",
                            FatherName = "FatherName19",
                            Name = "Name19",
                            NickName = "User19",
                            Password = "User19",
                            RoleId = 2,
                            Surname = "Surname19"
                        },
                        new
                        {
                            Id = 21,
                            Email = "us3rt35t@yandex.ru",
                            FatherName = "FatherName20",
                            Name = "Name20",
                            NickName = "User20",
                            Password = "User20",
                            RoleId = 2,
                            Surname = "Surname20"
                        });
                });

            modelBuilder.Entity("BarberShop.DAL.Common.Models.BusyRecord", b =>
                {
                    b.HasOne("BarberShop.DAL.Common.Models.Barber", "Barber")
                        .WithMany()
                        .HasForeignKey("BarberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BarberShop.DAL.Common.Models.Offer", "Offer")
                        .WithMany()
                        .HasForeignKey("OfferId");

                    b.Navigation("Barber");

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("BarberShop.DAL.Common.Models.Review", b =>
                {
                    b.HasOne("BarberShop.DAL.Common.Models.Barber", "Barber")
                        .WithMany()
                        .HasForeignKey("BarberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BarberShop.DAL.Common.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Barber");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BarberShop.DAL.Common.Models.User", b =>
                {
                    b.HasOne("BarberShop.DAL.Common.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
